/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null || head.next==null) return head; 
        ListNode last=head;
        int l=1;
        while(last.next!=null){
            last=last.next;
            l++; 
        }
        last.next=head;
        
        int rotation=k%l;
        int skip=l-rotation;
        ListNode newLast=get(skip-1,head);
        head=newLast.next;
       newLast.next=null;
        
        return head;
    }
    public ListNode get(int index,ListNode head){
        ListNode node=head;
        for(int i=0;i<index;i++){
            node=node.next;
        }
        return node;
    }
}
